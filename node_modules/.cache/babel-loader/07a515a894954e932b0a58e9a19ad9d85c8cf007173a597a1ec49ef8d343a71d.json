{"ast":null,"code":"var _jsxFileName = \"/Users/kisho/eclipse-workspace/learning-react/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n}\n_c = Square;\nexport function Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext == true) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n  }\n  const winner = calculateWinner(squares);\n  const drow = squares.filter(square => {\n    return square !== null;\n  });\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else if (drow) {\n    status = \"No one win\";\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), [0, 3, 6].map(value => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [0, 1, 2].map(index => /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[value + index],\n        onSquareClick: () => handleClick(value + index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: move === history.length - 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 97\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  });\n  const [list, setList] = useState(moves);\n  function reverse() {\n    // const nextList = [...list];\n    // nextList.reverse();\n    // setList(nextList);\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: reverse,\n        children: \"Reverse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"Ak2Y0OgFvV4RsK9vXZ80LWvCh3g=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","handleClick","i","calculateWinner","nextSquares","slice","winner","drow","filter","square","status","map","index","_c2","Game","_s","history","setHistory","Array","fill","currentMove","setCurrentMove","currentSquares","handlePlay","nextHistory","length","jumpTo","nextMove","moves","move","description","list","setList","reverse","_c3","lines","a","b","c","$RefreshReg$"],"sources":["/Users/kisho/eclipse-workspace/learning-react/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction Square({ value, onSquareClick }) {\n  return <button className=\"square\" onClick={onSquareClick}>\n    {value}</button>;\n}\n\nexport function Board({ xIsNext, squares, onPlay }) {\n  \n\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n\n    const nextSquares = squares.slice();\n    if (xIsNext == true) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    \n    onPlay(nextSquares);\n  }\n\n  const winner = calculateWinner(squares);\n  const drow = squares.filter(square => {\n    return square !== null;\n  })\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else if(drow) {\n    status = \"No one win\";\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\"); \n  }\n\n  return (\n    <>\n      <div className='status'>{status}</div>\n      {\n        [0,3,6].map((value) => \n          <div className=\"board-row\">\n            {\n              [0,1,2].map((index) => <Square value={squares[value + index]} onSquareClick={() => handleClick(value + index)} />)\n            }\n          </div>\n        )\n      }\n    </>\n  ) ;\n}\n\nexport default function Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n\n    return (\n      <li key={move}>\n        {\n          move === history.length - 1 ? <div onClick={() => jumpTo(move)}>{description}</div> : <button onClick={() => jumpTo(move)}>{description}</button>\n        }\n      </li>\n    );\n  });\n\n  const [list, setList] = useState(moves);\n\n  function reverse() {\n    // const nextList = [...list];\n    // nextList.reverse();\n    // setList(nextList);\n  };\n\n  return(\n    <div className='game'>\n      <div className='game-board'>\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n      </div>\n      <div className='game-info'>\n        <ol>\n          {moves}\n        </ol>\n        <button onClick={reverse}>Reverse</button>\n      </div>\n    </div>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    } \n  }\n  return null;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}